// <auto-generated />
using System;
using EGJV.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EGJV.Migrations
{
    [DbContext(typeof(Banco))]
    [Migration("20190701203037_up5")]
    partial class up5
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EGJV.Models.Asset", b =>
                {
                    b.Property<long>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AssetTypeId");

                    b.Property<long>("CompanyId");

                    b.Property<string>("Description");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.HasKey("AssetId");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("EGJV.Models.AssetType", b =>
                {
                    b.Property<long>("AssetTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CompanyId");

                    b.Property<string>("Description");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.HasKey("AssetTypeId");

                    b.HasIndex("CompanyId");

                    b.ToTable("AssetTypes");
                });

            modelBuilder.Entity("EGJV.Models.Company", b =>
                {
                    b.Property<long>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Cnpj")
                        .IsRequired();

                    b.Property<string>("CommercialNumber");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Neighborhood");

                    b.Property<string>("SocialName");

                    b.Property<string>("State");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("StreetNumber");

                    b.Property<string>("ZipCode")
                        .IsRequired();

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("EGJV.Models.Role", b =>
                {
                    b.Property<long>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EGJV.Models.Ticket", b =>
                {
                    b.Property<long>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssetId");

                    b.Property<string>("Assunto");

                    b.Property<long?>("CompanyId");

                    b.Property<DateTime>("DataAbertura");

                    b.Property<string>("Descricao");

                    b.Property<string>("EmailSolicitante");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<DateTime>("PrevisaoConclusao");

                    b.Property<string>("Status");

                    b.Property<long?>("TUserId");

                    b.HasKey("TicketId");

                    b.HasIndex("AssetId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("TUserId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("EGJV.Models.TUser", b =>
                {
                    b.Property<long>("TUserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthToken");

                    b.Property<DateTime>("Birthdate");

                    b.Property<string>("CPF");

                    b.Property<long?>("CompanyId");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password");

                    b.Property<long?>("RoleId");

                    b.HasKey("TUserId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoleId");

                    b.ToTable("TUsers");
                });

            modelBuilder.Entity("EGJV.Models.Asset", b =>
                {
                    b.HasOne("EGJV.Models.AssetType", "AssetType")
                        .WithMany("Assets")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EGJV.Models.Company", "Company")
                        .WithMany("Assets")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EGJV.Models.AssetType", b =>
                {
                    b.HasOne("EGJV.Models.Company", "Company")
                        .WithMany("AssetTypes")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("EGJV.Models.Ticket", b =>
                {
                    b.HasOne("EGJV.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");

                    b.HasOne("EGJV.Models.Company", "Company")
                        .WithMany("Tickets")
                        .HasForeignKey("CompanyId");

                    b.HasOne("EGJV.Models.TUser", "TUser")
                        .WithMany()
                        .HasForeignKey("TUserId");
                });

            modelBuilder.Entity("EGJV.Models.TUser", b =>
                {
                    b.HasOne("EGJV.Models.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId");

                    b.HasOne("EGJV.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
