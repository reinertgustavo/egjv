// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartGarcom.Models;

namespace SmartGarcom.Migrations
{
    [DbContext(typeof(Banco))]
    partial class BancoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartGarcom.Models.Asset", b =>
                {
                    b.Property<long>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AssetTypeId");

                    b.Property<long>("CompanyId");

                    b.Property<string>("Description");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<double>("Price");

                    b.HasKey("AssetId");

                    b.HasIndex("AssetTypeId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("SmartGarcom.Models.AssetType", b =>
                {
                    b.Property<long>("AssetTypeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CompanyId");

                    b.Property<string>("Description");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.HasKey("AssetTypeId");

                    b.HasIndex("CompanyId");

                    b.ToTable("AssetTypes");
                });

            modelBuilder.Entity("SmartGarcom.Models.Company", b =>
                {
                    b.Property<long>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("Cnpj")
                        .IsRequired();

                    b.Property<string>("CommercialNumber");

                    b.Property<string>("ImagePath");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Neighborhood");

                    b.Property<string>("SocialName");

                    b.Property<string>("State");

                    b.Property<string>("StreetAddress");

                    b.Property<string>("StreetNumber");

                    b.Property<string>("ZipCode")
                        .IsRequired();

                    b.HasKey("CompanyId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("SmartGarcom.Models.Order", b =>
                {
                    b.Property<long>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("OrderCardId");

                    b.Property<long?>("StatusID");

                    b.HasKey("OrderId");

                    b.HasIndex("OrderCardId");

                    b.HasIndex("StatusID");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("SmartGarcom.Models.OrderCard", b =>
                {
                    b.Property<long>("OrderCardId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CompanyId");

                    b.Property<long?>("TableId");

                    b.Property<long?>("UserTUserId");

                    b.Property<string>("orderCardToken");

                    b.HasKey("OrderCardId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("TableId");

                    b.HasIndex("UserTUserId");

                    b.ToTable("OrderCards");
                });

            modelBuilder.Entity("SmartGarcom.Models.OrderProduct", b =>
                {
                    b.Property<long>("OrderProductId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AssetId");

                    b.Property<long?>("OrderId");

                    b.Property<long>("Quantity");

                    b.HasKey("OrderProductId");

                    b.HasIndex("AssetId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderAssets");
                });

            modelBuilder.Entity("SmartGarcom.Models.Role", b =>
                {
                    b.Property<long>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SmartGarcom.Models.Status", b =>
                {
                    b.Property<long>("StatusID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("StatusID");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("SmartGarcom.Models.Table", b =>
                {
                    b.Property<long>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("CompanyId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Number");

                    b.Property<string>("QRCode");

                    b.HasKey("TableId");

                    b.HasIndex("CompanyId");

                    b.ToTable("Tables");
                });

            modelBuilder.Entity("SmartGarcom.Models.TUser", b =>
                {
                    b.Property<long>("TUserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthToken");

                    b.Property<DateTime>("Birthdate");

                    b.Property<string>("CPF");

                    b.Property<long?>("CompanyId");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<string>("Password");

                    b.Property<long?>("RoleId");

                    b.HasKey("TUserId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RoleId");

                    b.ToTable("TUsers");
                });

            modelBuilder.Entity("SmartGarcom.Models.Asset", b =>
                {
                    b.HasOne("SmartGarcom.Models.AssetType", "AssetType")
                        .WithMany("Assets")
                        .HasForeignKey("AssetTypeId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SmartGarcom.Models.Company", "Company")
                        .WithMany("Assets")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SmartGarcom.Models.AssetType", b =>
                {
                    b.HasOne("SmartGarcom.Models.Company", "Company")
                        .WithMany("AssetTypes")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("SmartGarcom.Models.Order", b =>
                {
                    b.HasOne("SmartGarcom.Models.OrderCard", "OrderCard")
                        .WithMany()
                        .HasForeignKey("OrderCardId");

                    b.HasOne("SmartGarcom.Models.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusID");
                });

            modelBuilder.Entity("SmartGarcom.Models.OrderCard", b =>
                {
                    b.HasOne("SmartGarcom.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("SmartGarcom.Models.Table", "Table")
                        .WithMany()
                        .HasForeignKey("TableId");

                    b.HasOne("SmartGarcom.Models.TUser", "User")
                        .WithMany()
                        .HasForeignKey("UserTUserId");
                });

            modelBuilder.Entity("SmartGarcom.Models.OrderProduct", b =>
                {
                    b.HasOne("SmartGarcom.Models.Asset", "Asset")
                        .WithMany()
                        .HasForeignKey("AssetId");

                    b.HasOne("SmartGarcom.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId");
                });

            modelBuilder.Entity("SmartGarcom.Models.Table", b =>
                {
                    b.HasOne("SmartGarcom.Models.Company", "Company")
                        .WithMany("Tables")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("SmartGarcom.Models.TUser", b =>
                {
                    b.HasOne("SmartGarcom.Models.Company", "Company")
                        .WithMany("Users")
                        .HasForeignKey("CompanyId");

                    b.HasOne("SmartGarcom.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId");
                });
#pragma warning restore 612, 618
        }
    }
}
